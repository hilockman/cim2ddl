######################### for unix ########################
unix{
	MYSYS_HOME = $$system(printenv ZND_HOME)
	OBJECT_DIR = $$system(printenv OBJECT_DIR)	
	MYSYS_LIB_DIR = $$MYSYS_HOME/lib
	QTDIR = $$system(printenv QTDIR)
 	
	UNAME = $$system(uname -s)
	OS = $$system(uname -n)
	message(当前系统是 $$OS --MYSYS_HOME:$$MYSYS_HOME---OBJECT_DIR: $$OBJECT_DIR)
	
	OS_DIR  = $$OBJECT_DIR
	LIB_DIR = lib_$$OBJECT_DIR
	UI_DIR = ./ui
	
	!exists( $$CURRENT_PROJECT_PATH/$$OS_DIR ) {
		system(mkdir $$CURRENT_PROJECT_PATH/$$OS_DIR)	
		message( mkdir $$CURRENT_PROJECT_PATH/$$OS_DIR )
	}
	#QMAKE_MAKEFILE = $$CURRENT_PROJECT_PATH/makefile

	
	CONFIG	    += plugin

	contains(UNAME, OSF1 ){
		DEFINES +=_ALPHA _GRAPH_ALPHA
		QMAKE_CXXFLAGS  += -msg_disable narrowptr
	}

	contains(UNAME, AIX){
		DEFINES +=_IBM_GCC
    QMAKE_CXXFLAGS  += -O2
#		QMAKE_CXXFLAGS  += -Wl,-qnotempinc  -Wl,-qrtti=all -Wl,-qalign=natural -Wl,-qchars=signed
		QMAKE_LFLAGS_SHAPP += -Wl,-brtl
		QMAKE_LFLAGS_SHLIB += -Wl,-brtl
#        QMAKE_LFLAGS_SHAPP +=-brtl 
#		QMAKE_LFLAGS_SHLIB +=-brtl 
		QMAKE_LFLAGS      +=-Wl,-bmaxdata:0xffffffff00/dsa  -Wl,-brtl -Wl,-bexpall
#		QMAKE_LFLAGS      +=-G -bmaxdata:0x70000000/dsa
	}

	contains(UNAME,HP-UX){
		DEFINES +=_HPUX
	}

	contains(UNAME, SunOS){
		DEFINES +=_SUN
		contains(OBJECT_DIR, x86){
			DEFINES +=__i386
		}
	}
        contains(UNAME, Linux){
                DEFINES +=_LINUX
                QMAKE_CXXFLAGS  += -fpermissive
        }
		
    MOC_DIR = $$OBJECT_DIR
    OBJECTS_DIR = $$OBJECT_DIR         
      
}	

######################### for windows ########################
win32{
	QMAKE_CXXFLAGS   = -nologo -Zm200 
	QTDIR = $$system("echo %QTDIR% ")
	MYSYS_HOME = $$system("echo %ZND_HOME%")
	CONFIG(debug, debug|release){
			QMAKE_CXXFLAGS += /GR /EHsc /MDd /Zi
			QMAKE_LFLAGS += /DEBUG
		}
		CONFIG(release, debug|release){
			QMAKE_CXXFLAGS += /GR /EHsc /MD /Zi
			QMAKE_LFLAGS += /RELEASE		
		}
		#/FR"Debug/"
    DEFINES -= UNICODE
    DEFINES += WIN32   
	DEFINES += _CRT_SECURE_NO_WARNINGS  WIN32_LEAN_AND_MEAN NOMINMAX

#	MOC_DIR = Debug

	QMAKE_TARGET.arch = x86_64
}

######################### for public ########################
DEPENDPATH += ./ ../ \
		./include ../include ../../include \
		../../../include ../../../../include \
		$$CURRENT_PROJECT_PATH ui	\
		$$MYSYS_HOME \
    $$MYSYS_HOME/dev/include 
	
	
#动态库和执行程序统一放到bin目录
unix {
	CONFIG(debug, debug|release){

		CONFIG += debug
		DESTDIR = $$MYSYS_HOME/bin
		QMAKE_LIBDIR += $$MYSYS_HOME/bin
		MYSYS_LIB_PATH = $$MYSYS_HOME/bin
	}
	CONFIG(release, debug|release){
		CONFIG += release
		DESTDIR = $$MYSYS_HOME/binary/kylin64/release/bin
		QMAKE_LIBDIR += $$MYSYS_HOME/bin
		MYSYS_LIB_PATH = $$MYSYS_HOME/bin
	}				
}


#CONFIG += thread  console 
win32{
	QMAKE_CXXFLAGS_WARN_ON-= -w34100 -w34189 -w34251
	CONFIG(debug, debug|release){
		CONFIG += debug
		DESTDIR = $$MYSYS_HOME/bin
		PDBDIR = $$MYSYS_HOME/bin
		QMAKE_LIBDIR += $$MYSYS_HOME/dev/lib_debug
		MYSYS_LIB_PATH = $$MYSYS_HOME/dev/lib_debug
	}
	CONFIG(release, debug|release){
		CONFIG += release
		DESTDIR = $$MYSYS_HOME/binary/win64/release/bin
		PDBDIR = $$MYSYS_HOME/binary/win64/release/pdb
		QMAKE_LIBDIR += $$MYSYS_HOME/dev/lib_release
		MYSYS_LIB_PATH = $$MYSYS_HOME/dev/lib_release
		
	}	
}	


CONFIG -= qt 


win32{
			FILE=$${DESTDIR}/*.lib
			PDBFILE=$${DESTDIR}/*.pdb
			FILE ~= s,/,\\,g
			PDBFILE ~= s,/,\\,g
			LIBFILEPATH=$${MYSYS_LIB_PATH}
			LIBFILEPATH~= s,/,\\,g
			QMAKE_POST_LINK +=$$quote( cmd /c if exist $${FILE} move /y $${FILE} $${LIBFILEPATH}$$escape_expand(\n\t) if exist $${PDBFILE} move /y $${PDBFILE} $${PDBDIR}$$escape_expand(\n\t) )
			CONFIG(debug, debug|release){
			    
			}
			CONFIG(release, debug|release){
		        DESTDIR1 = $$MYSYS_HOME\\bin
			    FILE1=$${DESTDIR}/*.dll
				FILE1 ~= s,/,\\,g

			    #QMAKE_POST_LINK +=$$quote( cmd /c if exist $${FILE1} copy /y $${FILE1} $${DESTDIR1}$$escape_expand(\n\t)  )
			}
}
